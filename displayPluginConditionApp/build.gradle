apply plugin: 'com.android.application'
apply plugin: 'findbugs'

dependencies {
    implementation group:'net.jcip', name:'jcip-annotations', version:"${JCIP_ANNOTATION_VERSION_MATCHER}"
    implementation group:'com.android.support', name:'support-annotations', version:"${ANDROID_SUPPORT_VERSION_MATCHER}"
    implementation group:'com.android.support', name:'appcompat-v7', version:"${ANDROID_SUPPORT_VERSION_MATCHER}"
    implementation group:'com.twofortyfouram', name:'android-annotation', version:"${TWOFORTYFOURAM_ANNOTATION_VERSION_MATCHER}"
    implementation group:'com.twofortyfouram', name:'android-assertion', version:"${TWOFORTYFOURAM_ASSERTION_VERSION_MATCHER}"
    implementation group:'com.twofortyfouram', name:'android-plugin-api-for-locale', version:"${TWOFORTYFOURAM_PLUGIN_API_VERSION_MATCHER}"
    implementation group:'com.twofortyfouram', name:'android-plugin-client-sdk-for-locale', version:"${TWOFORTYFOURAM_PLUGIN_CLIENT_SDK_VERSION_MATCHER}"
    implementation group:'com.twofortyfouram', name:'android-spackle', version:"${TWOFORTYFOURAM_SPACKLE_VERSION_MATCHER}"

    androidTestImplementation group:'com.twofortyfouram', name:'android-test', version:"${TWOFORTYFOURAM_TEST_VERSION_MATCHER}"
}

android {
    compileSdkVersion Integer.parseInt(ANDROID_COMPILE_SDK_VERSION)

    defaultConfig {
        minSdkVersion Integer.parseInt(ANDROID_MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(ANDROID_TARGET_SDK_VERSION)
        versionCode Integer.parseInt(ANDROID_VERSION_CODE)
        versionName ANDROID_VERSION_NAME

        // Keep only the default and English localizations; which reduces app size since
        // dependencies contain localizations.
        // The last two are for support of pseudolocales in debug builds.
        resConfigs 'en', 'en-rUS', 'en_XA', 'ar_XB'
    }

    if (RELEASE_KEYSTORE_PATH && RELEASE_KEYSTORE_PASSWORD && RELEASE_KEY_ALIAS && RELEASE_KEY_ALIAS_PASSWORD) {
        signingConfigs {
            release {
                storeFile file(RELEASE_KEYSTORE_PATH)
                storePassword RELEASE_KEYSTORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_ALIAS_PASSWORD
            }
        }
    }

    buildTypes {
        debug {
            testCoverageEnabled Boolean.parseBoolean(IS_COVERAGE_ENABLED)
            // TODO: Investigate why the "debug" suffix causes some tests to break
            //applicationIdSuffix ".debug"
            pseudoLocalesEnabled true
            zipAlignEnabled true
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-project.txt'

            shrinkResources true

            if (RELEASE_KEYSTORE_PATH && RELEASE_KEYSTORE_PASSWORD && RELEASE_KEY_ALIAS && RELEASE_KEY_ALIAS_PASSWORD) {
                signingConfig signingConfigs.release
            }
        }
    }
}

task findbugs(type: FindBugs) {
    ignoreFailures = true
    classes = fileTree('build/intermediates/classes/release/')
    source = fileTree('src/main/java/')
    classpath = files()
    excludeFilter = file("$rootProject.projectDir/tools/findbugs/android-filter.xml")
    effort = 'max'
    reportLevel = 'low'
    reports {
        // Only one report type can be enabled at a time, apparently.
        xml.enabled = false
        html.enabled = true
    }
}
